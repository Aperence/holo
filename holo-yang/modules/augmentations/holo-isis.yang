module holo-isis {
  yang-version 1.1;
  namespace "http://holo-routing.org/yang/holo-isis";
  prefix holo-isis;

  import ietf-yang-types {
    prefix yang;
  }

  import ietf-inet-types {
    prefix inet;
  }

  import ietf-routing-types {
    prefix rt-types;
  }

  import ietf-routing {
    prefix rt;
  }

  import ietf-isis {
    prefix isis;
  }

  organization
    "Holo Routing Stack";

  description
    "This module defines augment statements for the ietf-isis
     module.";

  /*
   * Identities.
   */

  identity mt-topology {
    description
      "Base identity for IS-IS Multi-Topology (MT) types.";
  }

  identity mt-topology-standard {
    base mt-topology;
    description
      "Standard topology (MT-ID 0)";
  }

  identity mt-topology-ipv6-unicast {
    base mt-topology;
    description
      "IPv6 unicast topology (MT-ID 2)";
  }

  /*
   * Groupings.
   */

  grouping bier-protocol-extensions {
    description
      "Defines protocol extensions.";
    leaf mt-id {
      type uint8;
      description
        "Multi-topology associated with bier sub-domain.";
    }
    container bier {
      leaf enable {
        type boolean;
        default false;
        description
          "Enables bier protocol extensions.";
      }
      leaf advertise {
        type boolean;
        default true;
        description
          "Enable to advertise the parameters associated with bier.";
      }
      leaf receive {
        type boolean;
        default true;
        description
          "Enable to receive the parameters associated with bier.";
      }
      description
        "BIER global config.";
    }
  }

  /*
   * Augmentations.
   */

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/isis:isis" {
    description
      "IS-IS instance augmentations";
    container attached-bit {
      description "Configuration related to the ATT bit.";

      leaf suppress-advertisement {             
        type boolean;
        default false;
        description
          "When enabled, prevents the setting of the ATT bit in level 1
           LSPs originated by this level 1/2 router. This ensures that
           level 1 routers in the area do not install a default route
           pointing to this router.";
      }

      leaf ignore-reception {
        type boolean;           
        default false;
        description
          "When enabled, this level 1 router ignores the ATT bit in level
           1 LSPs it receives. As a result, it will not install a default
           route for any level 1/2 router that sets the ATT bit.";
      }
    }

    container inter-level-propagation-policies {
      description
        "Configuration options to control the propagation of routing information
         between IS-IS levels.";
      container level1-to-level2 {
        description
          "Configuration options to control the propagation of routing
           information from level 1 to level 2.";
        list summary-prefixes {
          description
            "List of summarization prefixes";
          key "prefix";
          leaf prefix {
            type inet:ip-prefix;
            description
              "The IP prefix to be advertised as a summary route into level 2.";
          }
          leaf metric {
            type uint32;
            description
              "Optional metric value for the summary route. If not specified,
               the lowest metric among the contributing more-specific level 1
               routes is used.";
          }
        }
      }
    }

    container trace-options {
      description "Instance level trace options for IS-IS.";

      list flag {
        key name;
        description "List of tracing options.";
        leaf name {
          description
            "List of tracing options";
          type enumeration {
            enum internal-bus;
            enum lsdb;
            enum packets-all;
            enum packets-hello;
            enum packets-psnp;
            enum packets-csnp;
            enum packets-lsp;
            enum spf;
          }
        }
        leaf send {
          description "Trace sent packets.";
          type boolean;
          default true;
        }
        leaf receive {
          description "Trace received packets.";
          type boolean;
          default true;
        }
      }
    }
  }

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/isis:isis/"
        + "isis:address-families/isis:address-family-list" {
    list redistribution {
      key "level type";
      description
        "Parameters relating to route redistribution for the address family";

      leaf level {
        type isis:level-number;
        description
          "IS-IS level into which the routes are redistributed.";
      }
      leaf type {
        type identityref {
          base rt:control-plane-protocol;
        }
        description
          "Type of the control-plane protocol -- an identity
           derived from the 'control-plane-protocol'
           base identity.";
      }
    }
  }

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/isis:isis/"
        + "isis:interfaces/isis:interface" {
    description
      "IS-IS interface augmentations";

    container trace-options {
      description "Interface level trace options for IS-IS.";

      list flag {
        key name;
        description "List of tracing options.";
        leaf name {
          description
            "List of tracing options";
          type enumeration {
            enum packets-all;
            enum packets-hello;
            enum packets-psnp;
            enum packets-csnp;
            enum packets-lsp;
          }
        }
        leaf send {
          description "Trace sent packets.";
          type boolean;
          default true;
        }
        leaf receive {
          description "Trace received packets.";
          type boolean;
          default true;
        }
      }
    }

    leaf state {
      config false;
      type enumeration {
        enum down {
          description
            "Interface is in the 'Down' state.";
        }
        enum up {
          description
            "Interface is in the 'Up' state.";
        }
      }
      description
        "Interface state.";
    }
    leaf circuit-id {
      config false;
      type isis:circuit-id;
      description
        "Interface circuit ID.";
    }
  }

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/isis:isis/"
        + "isis:interfaces/isis:interface/"
        + "isis:topologies/isis:topology" {
    leaf enabled {
      type boolean;
      default "true";
      description
        "Enables or disables the topology.";
    }
  }

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/isis:isis/isis:database/"
        + "isis:levels/isis:lsp" {
    leaf-list area-addresses {
      type isis:area-address;
      description
        "List of area addresses of the IS-IS node.  The IS-IS
         reference is TLV 1.";
    }
    leaf lsp-buffer-size {
      type uint16;
      units "bytes";
      description
        "The maximum sized LSP which may be generated.
         The IS-IS reference is TLV 14.";
    }
  }

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/isis:isis/isis:spf-control/"
        + "isis:ietf-spf-delay" {
    list level {
      config false;
      key "level";
      leaf level {
        type isis:level-number;
        description
          "IS-IS level.";
      }
      leaf current-state {
        type enumeration {
          enum quiet {
            description
              "QUIET state.";
          }
          enum short-wait {
            description
              "SHORT_WAIT state.";
          }
          enum long-wait {
            description
              "LONG_WAIT state.";
          }
        }
        config false;
        description
          "Current SPF Back-Off algorithm state.";
      }
      leaf remaining-time-to-learn {
        type rt-types:timer-value-milliseconds;
        units "msec";
        config false;
        description
          "Remaining time until the time-to-learn timer fires.";
      }
      leaf remaining-hold-down {
        type rt-types:timer-value-milliseconds;
        units "msec";
        config false;
        description
          "Remaining time until the hold-down timer fires.";
      }
      leaf last-event-received {
        type yang:timestamp;
        config false;
        description
          "Time of the last IGP event received.";
      }
      leaf next-spf-time {
        type yang:timestamp;
        config false;
        description
          "Time when the next SPF has been scheduled.";
      }
      leaf last-spf-time {
        type yang:timestamp;
        config false;
        description
          "Time of the last SPF computation.";
      }
    }
  }

  augment "/rt:routing/rt:control-plane-protocols/"
         + "rt:control-plane-protocol/isis:isis" {
     description
       "This augments IS-IS protocol configuration with bier.";
       container bier {
         uses bier-protocol-extensions;
         description
           "Control of bier advertisement and reception.";
       }
    }
}
